apply plugin: 'java'
apply plugin: 'maven'

group='com.codeborne'
archivesBaseName = 'selenide'
version='2.12-SNAPSHOT'

compileJava.options.debugOptions.debugLevel = "source,lines,vars"
sourceCompatibility = 1.6
targetCompatibility = 1.6

defaultTasks 'test', 'install'

repositories {
  mavenCentral()
}

configurations {
  provided
  compile.extendsFrom provided
}

dependencies {
  compile('org.seleniumhq.selenium:selenium-java:2.42.1') {
    exclude group: 'org.seleniumhq.selenium', module: 'selenium-htmlunit-driver'
    exclude group: 'org.seleniumhq.selenium', module: 'selenium-android-driver'
    exclude group: 'org.seleniumhq.selenium', module: 'selenium-iphone-driver'
    exclude group: 'org.seleniumhq.selenium', module: 'selenium-safari-driver'
    exclude group: 'org.webbitserver', module: 'webbit'
  }
  provided group: 'org.seleniumhq.selenium', name: 'selenium-htmlunit-driver', version: '2.42.1', transitive: false
  provided group: 'net.sourceforge.htmlunit', name: 'htmlunit', version: '2.14', transitive: false
  testRuntime group: 'net.sourceforge.htmlunit', name: 'htmlunit', version: '2.14'
  testRuntime group: 'org.seleniumhq.selenium', name: 'selenium-safari-driver', version: '2.42.1'
  testRuntime group: 'com.opera', name: 'operadriver', version: '1.5'
  provided 'junit:junit:4.11'
  provided 'org.testng:testng:6.8.8'
  provided group: 'com.github.detro', name: 'phantomjsdriver', version: '1.2.0', transitive: false
  testCompile 'org.mockito:mockito-all:1.9.5'
  testCompile 'org.eclipse.jetty:jetty-server:9.2.0.v20140526'
  testCompile 'org.eclipse.jetty:jetty-servlet:9.2.0.v20140526'
}

task libs(type: Sync) {
  from configurations.compile
  from configurations.runtime
  from configurations.testCompile
  from configurations.testRuntime
  into "$buildDir/lib"
}

classes.dependsOn libs

test {
  include 'com/codeborne/selenide/**/*'
}

task ie(type: Test) {
  systemProperties['browser'] = 'ie'
  systemProperties['timeout'] = '8000'
  systemProperties['webdriver.ie.driver'] = 'C:/Programs/IEDriverServer.exe'
  include 'integration/**/*'
  exclude '**/AlertText.*'
  exclude '**/ConfirmTest.*'
}

task chrome(type: Test) {
  systemProperties['browser'] = 'chrome'
  systemProperties['webdriver.chrome.driver'] = '/usr/bin/chromedriver'
  include 'integration/**/*'
}

task htmlunit(type: Test) {
  systemProperties['browser'] = 'htmlunit'
  include 'integration/**/*'
}

task phantomjs(type: Test) {
  systemProperties['browser'] = 'phantomjs'
  include 'integration/**/*'
}

task firefox(type: Test) {
  systemProperties['browser'] = 'firefox'
  include 'integration/**/*'
}

task safari(type: Test) {
  systemProperties['browser'] = 'safari'
  include 'integration/**/*'
}

task opera(type: Test) {
  systemProperties['browser'] = 'opera'
  include 'integration/**/*'
}

tasks.withType(Test).all { testTask ->
  testTask.systemProperties['file.encoding'] = 'UTF-8'
  testTask.testLogging.showStandardStreams = true
  testTask.systemProperties['BUILD_URL'] = System.getenv()['BUILD_URL']
  testTask.maxParallelForks = 3
  testTask.outputs.upToDateWhen { false }
}

task allTests(dependsOn: ['clean', 'test', 'chrome', 'firefox', 'htmlunit', 'phantomjs']) {}

task sourcesJar(type: Jar, dependsOn:classes) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

javadoc {
  failOnError=false
}

task javadocJar(type: Jar, dependsOn:javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

artifacts {
  archives jar
  archives sourcesJar
  archives javadocJar
}

task wrapper(type: Wrapper) {
  gradleVersion = '1.12'
  jarFile = './gradle-wrapper/gradle-wrapper.jar'
  scriptFile = './gradle'
}
