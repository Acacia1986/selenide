apply from: 'build.gradle'
apply plugin: 'signing'

defaultTasks 'clean', 'libs', 'test', 'install', 'uploadArchives'

signing {
  sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

//            repository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
              repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
              authentication(userName: "$sonatypeUsername", password: "$sonatypePassword")
            }

            pom.project {
              packaging 'jar'
              description 'Selenide = concise API for Selenium WebDriver in unit-tests'
              url 'https://github.com/codeborne/selenide'

               scm {
                   url 'scm:git@github.com:codeborne/selenide.git'
                   connection 'scm:git@github.com:codeborne/selenide.git'
                   developerConnection 'scm:git@github.com:codeborne/selenide.git'
               }

               licenses {
                   license {
                       name 'GPL 1.0'
                       url 'http://www.gnu.org/copyleft/gpl.html'
                       distribution 'repo'
                   }
               }

               developers {
                   developer {
                       id 'asolntsev'
                       name 'Andrei Solntsev'
                   }
               }
           }

           //mess with the generated pom to set the 'packaging' tag
           pom.withXml { XmlProvider xmlProvider ->
               def xml = xmlProvider.asString()
               def pomXml = new XmlParser().parse(new ByteArrayInputStream(xml.toString().bytes))

               pomXml.version[0] + { packaging('jar') }

               def newXml = new StringWriter()
               def printer = new XmlNodePrinter(new PrintWriter(newXml))
               printer.preserveWhitespace = true
               printer.print(pomXml)
               xml.setLength(0)
               xml.append(newXml.toString())
           }
        }
    }
}
